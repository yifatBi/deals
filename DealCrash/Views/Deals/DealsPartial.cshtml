@model IEnumerable<DealCrash.Models.Deal>

@foreach (var item in Model)
{
    string dealID = "Deal" + item.DealID;

    <section id="@dealID">
        <article class="blogPost">
            <header>
                <h2>@Html.DisplayFor(modelItem => item.title)</h2>
                <p>Posted on <time>@Html.DisplayFor(modelItem => item.createdDate)</time> by <a href="@Html.DisplayFor(modelItem => item.user.link)">@Html.DisplayFor(modelItem => item.user.name)</a> - <a href="#commentsOfPost @Html.DisplayFor(modelItem => item.DealID)">@Html.DisplayFor(modelItem => item.comments.Count) comments</a></p>
            </header>
            <div>
                @if (item.image != null && item.image.Length > 0)
                {
                    <img src="@Html.DisplayFor(modelItem => item.image)" alt="" style="float:right" />
                }
                <p>
                    @Html.DisplayFor(modelItem => item.text)
                </p>
            </div>
        </article>
    </section>
    <section id="commentsOfPost @Html.DisplayFor(modelItem => item.DealID)">
        <h3>Comments</h3>


        @if (item.comments != null && item.comments.ToList().Count > 0)
        {
            @Html.Partial("~/Views/Comments/CommentsPartial.cshtml", item.comments.ToList())
        }
        else
        {
            <p>no comments</p>
        }

        @{
            DealCrash.Models.Comment cmt = new DealCrash.Models.Comment();
            cmt.DealID = item.DealID;

            @Html.Partial("~/Views/Comments/NewCommentPartial.cshtml", cmt)
        }
    </section>
            }
